import React, { useEffect, useState } from 'react';
import { Loader, Card, FormField } from "../components";
import { useUser } from "@clerk/clerk-react";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2 className="mt-8 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const { user, isSignedIn } = useUser();
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchResults, setSearchResults] = useState([]);
  const [tab, setTab] = useState('community'); // 'you' or 'community'

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch('https://imaginezy.onrender.com/api/v1/post', {
          method: 'GET',
          headers: { 'Content-Type': 'application/json' },
        });
        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (err) {
        alert(err);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  useEffect(() => {
    if (searchText) {
      const results = allPosts.filter(
        (item) =>
          item.name.toLowerCase().includes(searchText.toLowerCase()) ||
          item.prompt.toLowerCase().includes(searchText.toLowerCase())
      );
      setSearchResults(results);
    } else {
      setSearchResults([]);
    }
  }, [searchText, allPosts]);

  // Tab filtering logic
  const yourPosts = isSignedIn
    ? allPosts.filter(post => post.userId === user?.id)
    : [];

  const communityPosts = allPosts;

  // Which data to show?
  const displayedPosts = (() => {
    if (searchText) {
      if (tab === 'you') {
        return yourPosts.length > 0
          ? searchResults.filter(post => post.userId === user?.id)
          : [];
      }
      return searchResults;
    } else {
      return tab === 'you' ? yourPosts : communityPosts;
    }
  })();

  // If not signed in, control the prompt-per-tab
  const showSignInMsg = !isSignedIn;

  // Custom messages per tab when not signed in
  const notSignedInMessage = tab === "community"
    ? "Sign in to view images generated by community"
    : "Sign in to view your images";

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by <span className="font-bold">Pollination.AI</span> within less than 5 seconds.
        </p>
      </div>

      {/* Tab Navigation and Announcement */}
      <div className="flex flex-col items-center mt-8">
        <div className="flex gap-12 border-b-2 border-gray-200">
          <div
            className={`cursor-pointer pb-2 px-2 transition-all duration-150
              ${tab === 'you'
                ? 'font-extrabold text-black border-b-4 border-fuchsia-700'
                : 'font-semibold text-gray-500 border-b-4 border-transparent'
              }`}
            onClick={() => setTab('you')}
          >
            Shared by You
          </div>
          <div
            className={`cursor-pointer pb-2 px-2 transition-all duration-150
              ${tab === 'community'
                ? 'font-extrabold text-fuchsia-700 border-b-4 border-fuchsia-700'
                : 'font-semibold text-gray-500 border-b-4 border-transparent'
              }`}
            onClick={() => setTab('community')}
          >
            Shared by Community
          </div>
        </div>
      </div>

      {/* Show sign in message depending on active tab if not signed in */}
      {showSignInMsg && (
        <div className="text-center my-8">
          <span className="text-lg text-[#ff3366] font-bold">
            {notSignedInMessage}
          </span>
        </div>
      )}

      <div>
        {loading ? (
          <div className="mt-10 flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && isSignedIn && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for{' '}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}

            {/* Only show image grids if signed in */}
            {isSignedIn && (
              <div className="mt-8 grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
                <RenderCards
                  data={displayedPosts}
                  title={
                    tab === 'you'
                      ? "No personal posts yet"
                      : "No community posts yet"
                  }
                />
              </div>
            )}
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
