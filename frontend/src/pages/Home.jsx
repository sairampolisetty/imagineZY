import React, { useEffect, useState } from 'react';

import { Loader, Card, FormField } from "../components";
import { useUser } from "@clerk/clerk-react";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }

  return (
    <h2 className="mt-8 font-bold text-[#6469ff] text-xl uppercase">{title}</h2>
  );
};

const Home = () => {
  const { user } = useUser();
  const [loading, setLoading] = useState(false);
  const [allPosts, setAllPosts] = useState([]);
  const [searchText, setSearchText] = useState("");
  const [searchResults, setSearchResults] = useState([]);
  const [tab, setTab] = useState('community'); // 'you' or 'community'

  useEffect(() => {
    const fetchPosts = async () => {
      setLoading(true);
      try {
        const response = await fetch('https://imaginezy.onrender.com/api/v1/post', {
          method: 'GET',
          headers: { 'Content-Type': 'application/json' },
        });

        if (response.ok) {
          const result = await response.json();
          setAllPosts(result.data.reverse());
        }
      } catch (err) {
        alert(err);
      } finally {
        setLoading(false);
      }
    };
    fetchPosts();
  }, []);

  // Optionally search logic if you already have it (unchanged)
  useEffect(() => {
    if (searchText) {
      const results = allPosts.filter(
        (item) =>
          item.name.toLowerCase().includes(searchText.toLowerCase()) ||
          item.prompt.toLowerCase().includes(searchText.toLowerCase())
      );
      setSearchResults(results);
    } else {
      setSearchResults([]);
    }
  }, [searchText, allPosts]);

  // Split posts for tab logic
  const yourPosts = allPosts?.filter(post => post.userId === user?.id);
  const communityPosts = allPosts?.filter(post => post.userId !== user?.id);

  // Search filtering works within selected tab
  const displayedPosts = (() => {
    if (searchText) {
      if (tab === 'you') {
        return searchResults.filter(post => post.userId === user?.id);
      }
      return searchResults.filter(post => post.userId !== user?.id);
    } else {
      return tab === 'you' ? yourPosts : communityPosts;
    }
  })();

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by <span className="font-bold">Pollination.AI</span> within less than 5 seconds.
        </p>
      </div>

      {/* Tab Navigation */}
      <div className="flex gap-4 my-6">
        <button
          className={`px-4 py-2 rounded ${tab === 'you' ? 'bg-fuchsia-600' : 'bg-neutral-800'} text-white font-semibold`}
          onClick={() => setTab('you')}
        >
          Shared by You
        </button>
        <button
          className={`px-4 py-2 rounded ${tab === 'community' ? 'bg-fuchsia-600' : 'bg-neutral-800'} text-white font-semibold`}
          onClick={() => setTab('community')}
        >
          Shared by Community
        </button>
      </div>

      {/* Optionally add a search input */}
      {/* 
      <FormField
        labelName="Search"
        type="text"
        name="search"
        placeholder="Search images or users"
        value={searchText}
        handleChange={(e) => setSearchText(e.target.value)}
      />
      */}

      <div>
        {loading ? (
          <div className="mt-10 flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for{' '}
                <span className="text-[#222328]">{searchText}</span>
              </h2>
            )}

            <div className="mt-8 grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              <RenderCards
                data={displayedPosts}
                title={tab === 'you' ? "No personal posts yet" : "No community posts yet"}
              />
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;
